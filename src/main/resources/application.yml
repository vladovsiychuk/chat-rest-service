micronaut:
  application:
    name: saga-orchestrator-ddd-chat
  server:
    port: "${SERVICE_PORT:8082}"
    cors:
      enabled: true
      configurations:
        all:
          allowedOrigins:
            - "${FRONTEND_URL:}"
    idle-timeout: 30m
  http:
    services:
      view-service:
        urls:
          - "http://localhost:8082"
  security:
#    authentication: idtoken
#    oauth2:
#      clients:
#        google:
#          client-id: '${OAUTH_CLIENT_ID:xxx}'
#          client-secret: '${OAUTH_CLIENT_SECRET:yyy}'
#          openid:
#            issuer: 'https://accounts.google.com'
#    endpoints:
#      logout:
#        get-allowed: true
#    redirect:
#      login-success: 'http://localhost:3000'
#    token:
#      jwt:
#        cookie:
#          cookie-http-only: false
#      writer:
#        header:
#          enabled: true
#      propagation:
#        enabled: true
#        service-id-regex: "view-service"
    enabled: true
    authentication: bearer
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: pleaseChangeThisSecretForANewOne
      writer:
        header:
          enabled: true
      propagation:
        enabled: true
        service-id-regex: "view-service"

datasources:
  default:
    driver-class-name: com.mysql.cj.jdbc.Driver
    db-type: mysql

r2dbc:
  datasources:
    default:
      dialect: MYSQL
      db-type: mysql

liquibase:
  enabled: true
  datasources:
    default:
      change-log: 'classpath:db/changelog.xml'

jackson:
  serialization-inclusion: non_null


#logger.levels:
#  io.micronaut.context: TRACE
